ThreadLocal

            原理： https://www.jianshu.com/p/3c5d7f09dfbd
            内存泄露： https://zhuanlan.zhihu.com/p/102571059

            ThreadLocal不能提供继承 即 父亲的 ThreadLoacl 儿子不能访问
            InheritableThreadLoca 提供继承


            因此，ThreadLocal内存泄漏的根源是：由于ThreadLocalMap的生命周期跟Thread一样长，如果没有手动删除对应key就会导致内存泄漏，
            而不是因为弱引用。

            ThreadLocal正确的使用方法
            每次使用完ThreadLocal都调用它的remove()方法清除数据
            将ThreadLocal变量定义成private static，这样就一直存在ThreadLocal的强引用，也就能保证任何时候都能通过ThreadLocal的弱引用访
            问到Entry的value值，进而清除掉 。

            ThreadLoacl 底层的map key 存的是 这个ThreadLoacl对象 value 存的是 值

            每一个线程都维护了一个自己的ThreadLocalMap 底层是一个数组 存的Entry(key,value)



























































































