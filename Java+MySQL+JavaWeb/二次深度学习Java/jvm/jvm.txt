

类装载器ClassLoader：

    负责加载class文件，class文件在文件的开头有特定的文件标示。将class文件字节码内容加载到内存中。并将这些内容转换成方法区中的
    运行时数据结构并且 ClassLoader 只负责class文件的加载，至于他是否可以运行，则由Execution Engine决定。

     .class  -> ClassLoader -> Class -> 实例化

     获取类加载器

        实例化对象.getclass().getClassLoader()

查看JVM内存

      long maxMemory = Runtime.getRuntime().maxMemory();   //最大内存(byte)

      long totalMemory = Runtime.getRuntime().totalMemory();   //总内存(byte)

      System.out.println(maxMemory/(double)1024/1024+"MB");
      

       System.out.println(totalMemory/(double)1024/1024+"MB");
    
常用jvm 参数（可以在idea里设置）：  -- 可以用这个设置heap大小等提提高微服务工作能力
        查看运行中java程序的指定jvm参数值
        jps -l 查看进程号
        jinfo -flag 类型 进程号   e.g.  jinfo -flag PrintGCDetails 17840
        jinfo -flags 进程号 查看所有的运行模块
        IDEA里设置jvm参数：
            Run -> Edit Configurations -> 选择类 -> 在 VM options里面设置jvm 参数
        
        查看所有的jvm家底 包括自己设置的和默认值的：
            java -XX:+PrintFlagsInitial  因尼受
                = 默认的
                := 修改的更新值
            java -XX:+PrintFlagsFinal 查看更改后的所有的配置信息


        k v 型：
            -XX:MetaspaceSize = ***  元空间大小 受本地内存影响 （永久代在堆中，元空间在本地中）
            -XX:MaxTenuringThreshold = *** 新生代 ->养老区需要经过多少次淘汰 默认值 15
        
        boolean型：-XX:后面是 + 则开启 -则关闭
            -XX:-PrintGCDetails  没开启GC日志 
            -XX:+UseSerialGC 串行垃圾回收器
            -XX:+UseParalleGC 并行垃圾回收器
        
        缩写：
            -Xms 等价于 -XX:InitialHeapSize 最小堆大小   Young + Old  默认为物理内存的1/64
            -xmx 等价于 -XX:MaxHeapSize 最大堆大小   Young + Old  默认为物理内存的1/4
            -Xmn   年轻代大小 Eden + s0 + s1  = Young 
            -Xss   每个线程的堆栈大小 根据不同的OS 默认值不同
        
        