String s ="0123456789";
System.out.println(s.substring(3,5));

    >> 3 4   substring截取时左闭右开

for (int i : Arrays.copyOfRange(arr, 3, 5)) {
            System.out.print(i);
        }

    >> 3 4   Arrays.copyOfRange截取时左闭右开  Arrays.copyOfRange截取数组




关于 Integer 和 int 的比较的延伸：

    1、由于 Integer 变量实际上是对一个 Integer 对象的引用，所以两个通过 new 生成的 Integer 变量永远是不相等的，因为其内存地址是不同的；

    2、Integer 变量和 int 变量比较时，只要两个变量的值是相等的，则结果为  true。因为包装类 Integer 和基本数据类型 int 类型进行比较时，
     会自动拆包装类为 int，然后进行比较，实际上就是两个 int 型变量在进行比较；

    3、非 new 生成的 Integer 变量和 new Integer() 生成的变量进行比较时，结果为 false。因为非 new 生成的 Integer 变量指向的是 Java 
    常量池中的对象，而 new Integer() 生成的变量指向堆中新建的对象，两者在内存中的地址不同；

    4、对于两个非 new 生成的 Integer 对象进行比较时，如果两个变量的值在区间 [-128, 127] 之间，则比较结果为 true，否则为 false。Java
     在编译 Integer i = 100 时，会编译成 Integer i = Integer.valueOf(100)，而 Integer 类型的 valueOf 的源码如下所示：

    5.两个Integer需要用.intValue()方法比较大小

        Integer a1 = 999;
        Integer a2 = 999;
        System.out.println(a1 == a2);  // false


        Integer a3 = 1;
        Integer a4 = 1;
        System.out.println(a3 == a4);   //true

        Integer a5 =new Integer(15);
        Integer a6 = new Integer(15);
        System.out.println(a5 == a6);   //false


        Integer a7 = new Integer(15);
        Integer a8 = 15;
        System.out.println(a7 == a8);   //false

        Integer a5 =new Integer(15);
        Integer a6 = new Integer(15);
        System.out.println(a5.intValue() == a6.intValue());    //true




//面湿资料
https://blog.csdn.net/pcwl1206




1.substring方法

　　定义和用法

　　substring 方法用于提取字符串中介于两个指定下标之间的字符。

　　语法

　　    stringObject.substring(start,stop)

　　参数     描述

    　　start     必需。一个非负的整数，规定要提取的子串的第一个字符在 stringObject 中的位置。

    　　stop     可选。一个非负的整数，比要提取的子串的最后一个字符在 stringObject 中的位置多 1。如果省略该参数，那么返回的子串会一直到字符串的结尾。

　　返回值

　　    一个新的字符串，该字符串值包含 stringObject 的一个子字符串，其内容是从 start 处到 stop-1 处的所有字符，其长度为 stop 减 start。

　　说明

    　　substring 方法返回的子串包括 start 处的字符，但不包括 end 处的字符。

    　　如果 start 与 end 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。

    　　如果 start 比 end 大，那么该方法在提取子串之前会先交换这两个参数。

    　　如果 start 或 end 为负数，那么它将被替换为 0。

2.substr 方法

　　定义和用法

　　    substr 方法用于返回一个从指定位置开始的指定长度的子字符串。

　　语法

　　    stringObject.substr(start [, length ])

　　参数    描述

    　　start   必需。所需的子字符串的起始位置。字符串中的第一个字符的索引为 0。

    　　length 可选。在返回的子字符串中应包括的字符个数。

　　说明

    　　如果 length 为 0 或负数，将返回一个空字符串。

    　　如果没有指定该参数，则子字符串将延续到stringObject的最后。

　　举例：

    　　var str = "0123456789";

    　　alert(str.substring(0));------------"0123456789"

    　　alert(str.substring(5));------------"56789"

    　　alert(str.substring(10));-----------""

    　　alert(str.substring(12));-----------""

    　　alert(str.substring(-5));-----------"0123456789"

    　　alert(str.substring(-10));----------"0123456789"

    　　alert(str.substring(-12));----------"0123456789"

    　　alert(str.substring(0,5));----------"01234"

    　　alert(str.substring(0,10));---------"0123456789"

    　　alert(str.substring(0,12));---------"0123456789"

    　　alert(str.substring(2,0));----------"01"

    　　alert(str.substring(2,2));----------""

    　　alert(str.substring(2,5));----------"234"

    　　alert(str.substring(2,12));---------"23456789"

    　　alert(str.substring(2,-2));---------"01"

    　　alert(str.substring(-1,5));---------"01234"

    　　alert(str.substring(-1,-5));--------""

    　　alert(str.substr(0));---------------"0123456789"

    　　alert(str.substr(5));---------------"56789"

    　　alert(str.substr(10));--------------""

    　　alert(str.substr(12));--------------""

    　　alert(str.substr(-5));--------------"0123456789"

    　　alert(str.substr(-10));-------------"0123456789"

    　　alert(str.substr(-12));-------------"0123456789"

    　　alert(str.substr(0,5));-------------"01234"

    　　alert(str.substr(0,10));------------"0123456789"

    　　alert(str.substr(0,12));------------"0123456789"

    　　alert(str.substr(2,0));-------------""

    　　alert(str.substr(2,2));-------------"23"

    　　alert(str.substr(2,5));-------------"23456"

    　　alert(str.substr(2,12));------------"23456789"

    　　alert(str.substr(2,-2));------------""

    　　alert(str.substr(-1,5));------------"01234"

    　　alert(str.substr(-1,-5));-----------""


创建集合 同时添加多个元素

    List list = Arrays.asList(1,2,3);













































































