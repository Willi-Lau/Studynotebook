

位置：
    D:\elasticsearch-7.14.1-windows-x86_64\elasticsearch-7.14.1\bin

begin:
    cd  D:\elasticsearch-7.14.1-windows-x86_64\elasticsearch-7.14.1\bin
    点击：elasticSearch.bat

端口：
    9200 浏览器测试端口 输入 localhost:9200

    put post 区别
        put是幂等性的。Post是非幂等性的
        幂等性：两次请求结果一直，产生的效果一样，就是幂等性


    获取所有的 kv  --- GET

        http://127.0.0.1:9200/_cat/indices?v


    添加 
        属性/文档 ---  POST请求  / _doc / _create
        1.
            http://127.0.0.1:9200/索引名字/_doc/自定义索引号     --> _doc 后面这个自定义索引号是es唯一标志，如果没写就自动生成一个
            此时还需要添加一个json 属性串，不然会报错

            {
                "name" : "liuweiyi",
                "age" : "22" 
            }
        2.
            http://127.0.0.1:9200/索引名字/_create/自定义索引号     --> _doc 后面这个自定义索引号是es唯一标志，如果没写就自动生成一个
            此时还需要添加一个json 属性串，不然会报错

            {
                "name" : "liuweiyi",
                "age" : "22" 
            }

    查询
        1.  _doc  ---- GET请求   主键查询
             http://127.0.0.1:9200/索引名字/_doc/自定义索引号   --> _doc 后面这个自定义索引号是es唯一标志

        2.  _seaech --- GET   全部查询
            http://127.0.0.1:9200/shopping/_search  获取此索引全部结果（可能有多个）


    更新/覆盖
        1. _doc  ----PUT 主键覆盖 (全量修改，旧的所有都删除 使用新的)
             http://127.0.0.1:9200/索引名字/_doc/自定义索引号  

             {
                "name" : "liuweiyi",
                "age" : "23"    ---》 22改23
            }

            注意：这种更改也可以更改key ， k,v都可以更改
            e.g.
            {
                "name1" : "liuweiyi",
                "age1" : "23"    ---》 22改23
            }

        2. _update  -----POST 局部修改
             http://127.0.0.1:9200/索引名字/_update/自定义索引号  
            {
                "doc": {
                    "name": "张三"   --》 要修改的信息，剩下的信息不变
                }
            }

    删除
        1. _doc   -----DELETE
             http://127.0.0.1:9200/索引名字/_update/自定义索引号  





进阶查询：
    条件查询： 
         ---GET
         1. uri传参
            http://127.0.0.1:9200/索引名字/_search?q=key:"value"

         2.JSON 传参
             http://127.0.0.1:9200/索引名字/_search
             {
                 "query"；{    -->代表查询
                     "match":{    --> 代表精确查找
                         "key":"value"    --> 具体的值
                     }
                 },
                 "from" : 0 ,   --> 类似分页 从哪个位置始查   计算公式： （页数 - 1） * pageSize
                 "size" : 2 ,     --> 类似分页 每一页有多少数据
                 "_source" : [ "key1" ]  ， --> 筛选字段，摘选想要的，只显示key1
                 "sort" : {   ---> 排序
                     "key" :{    -----> 排序的字段
                         "order" ："asc / desc"    -----> 升序还是降序
                     }
                 }
             }
        





















