https://blog.csdn.net/qq_32448349/article/details/101696892
https://www.cnblogs.com/ejiyuan/p/11014765.html

Redis安装：https://www.cnblogs.com/liuqingzheng/p/9831331.html
Redis命令大全：http://redisdoc.com/

缓存  不同于数据库 读取更快 临时文件可以放在缓存中


JSR107规范：

    Java Caching 定义了5个核心接口，分别是CachingProvider,CacheManager,Cache,Entry,Expiry

    CachingProvider :定义了创建，配置，获取，管理，和控制多个CacheManager.一个应用可以再运行期间访问多个CachingProvider
    CacheManager: 定义了创建，配置，获取，管理和控制多个唯一命名的Cahce,这些Cache存在于Cache存在于CacheManager的上下文中，
                一个CacheManager仅被一个CachingProvide拥有
    Cache:是一个类似Map的数结构并临时存储以Key为索引的值，一个Cache仅被一个CacheManager所拥有，
    Entry:是一个存储在Cache中的key-value对
    Expiry:每一个存储在Cache中的条目有一个定义的有效期，一旦超过这个时间，条目为过期的状态。一旦过期，条目将不可访问，更新和删除。
            缓存有效期通过设置ExpirtyPolicy设置

    CacheManager 可以理解为数据库连接池，每一个Cache是一个连接



    缓存重要概念+注解

    Cache:缓存接口，定义缓存操作。实现有RedisCache,EhCacheCache,ConcurrentMapCache 等
    CacheManager:缓存管理器，管理各种缓存。
    @Cacheable:主要针对方法配置，能够根据方法的请求参数对其结果进行缓存
    @CacheEvict 清空缓存
    @CachePut 保证方法被调用，有希望结果被缓存
    @EnableCaching：开启基于缓存的注解
    keyGenerator 缓存数据时key生成策略
    serialize 缓存数据时value 序列化策略

Jedis 
        java 操作Radis得工具
        maven 导入：
                <dependency>
                        <groupId>redis.clients</groupId>
                        <artifactId>jedis</artifactId>
                        <version>2.9.0</version>
                </dependency>
        操作：
                获取连接：             Jedis jedis = new Jedis("127.0.0.1",6379);
                设置密码：             jedis.auth("12345");
                返回连接结果：         System.out.println(jedis.ping());

Redis:
        聚合模型：
                KV对
                Bson 类似Json  文档存储
                列族
                图形

       传统数据库ACID   :A Atomicity 原子性
                        C Consistency 一致性
                        I Isolation 独立性
                        D Durability 持久性

       NoSQL数据库  CAP:  C Consistency 强一致性  
                          A Availability 可用性
                          P Paration tolerance 分区容错性   （重要）


                        CAP只能三选二 三个特点不可能都满足，一个分布式系统不可能同时满足C,A,P这三个需求，最多只能完成两个 

                        CA : 单点集群，满足一致性，可用性得系统，通常在可扩展性不太强大   RDBMS  Oracle
                        CP:  满足一致性，分区容错性，通常性能都不好           MongoDB HBase Redis
                        AP: 满足可用性，分区容错性得系统，一致性都不好   大多数选择  数据量太大不能保证一致性  memcached



        设置Redis 密码：config set requirepass “密码”
        默认端口号 6379 
        进入Redis 目录： cd C:\Program Files\Redis
        启动Redis redis-cli
        输入密码  auth 12345   //设置密码未12345
        Redis 单进程 
        默认16个数据库  通过select num 选择   库得下标是 0-15  初始默认选择得是0号
                        e.g. 选择第一个库 select 1   显示： 127.0.0.1:6379[1]>

        Redis命令：
                set 名字 "内容"         设置key  set mykey1 "I love you all!”
                get 名字                获取key  get mykey1
                select  Num             选择第num 个库 0<num<15
                dbsize                  获取此库中 key得数量
                flushdb                 清空当前库
                flushall                清空所有库
                Key：
                keys *                  查看此库所有的 key
                keys m?                 查找所有m开头得key 例如 m1,m2,mmm
                exists m                查找此库中是否有这个key 
   





        Redis 五大数据类型：
                        String 字符串
                        Hash 哈希，类似Java 里得map
                        List 列表
                        Set 集合
                        Zset 有序集合      

                String 类型：是Redis 最基本的类型 一个key对应一个value
                        String 类型是二进制安全的。意思是Redis得String 可以包含任何数据。比如jpg图片或者序列化得对象
                        一个Redis 中字符串得value 最多可以存储512M
                
                Hash 类型：  Redis hash 是一个键值对得集合
                        Redis hash 是一个String 类型得field 和value 得映射表，hash特别适合用于存储对象
                        类似 Map<String,Object>
                
                List类型：   Redis列表是简单的字符串列表，按照插入顺序存储，你可以添加一个数据在链表头部得左边或者尾部得右边 
                        类似 LinkedList
                
                Set类型：    Redis得set是String类型无序集合，通过HashTable实现得

                Zset类型：   Redis得zset和set 一样也是String类型得元素集合，且不允许有重复得成员，不同的是 zset是有序得
                        有序是通过每一个元素都会关联一个double 类型得分数，Redis通过分数为集合中得元素从小到大进行排列，
                        zset得成员是唯一的，但分数可以重复
        

                   










