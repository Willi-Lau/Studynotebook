gateway:    

    分布式服务架构、微服务架构与 API 网关

        在微服务架构里，服务的粒度被进一步细分，各个业务服务可以被独立的设计、开发、测试、部署和管理。
        这时，各个独立部署单元可以用不同的开发测试团队维护，可以使用不同的编程语言和技术平台进行设计，
        这就要求必须使用一种语言和平 台无关的服务协议作为各个单元间的通讯方式。

    网关的角色是作为一个 API 架构，用来保护、增强和控制对于 API 服务的访问。

        API 网关是一个处于应用程序或服务（提供 REST API 接口服务）之前的系统，用来管理授权、访问控制和
        流量限制等，这样 REST API 接口服务就被 API 网关保护起来，对所有的调用者透明。因此，隐藏在 API 
        网关后面的业务系统就可以专注于创建和管理服务，而不用去处理这些策略性的基础设施
    
    geateway重要的概念：
        Route 路由: 这是网关得基本构成模块。他由一个id,一个目标url,一组断言和一组过滤器定义。如果断言为真就进行路由匹配
        Predicate 断言：输入类型是一个ServerWebExcahnge。我们可以使用它来匹配来自HTTP请求得任何内容，例如headers或参数
        filter 过滤器: Gateway 中得Filter分为两种类型得filter，分别是Gateway Filter和Global Filter 。过滤器将会对请求和响应
                       进行处理，处理HTTP
        
        配置：
            application.yml:

                server:
                port: 9527

                spring:
                application:
                    name: cloud-gateway
                cloud:
                    gateway:
                    discovery:
                        locator:
                        enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
                    routes:
                        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
                        uri: http://localhost:8001          #匹配后提供服务的路由地址
                #          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
                        predicates:
                            - Path=/payment/get/**         # 断言，路径相匹配的进行路由

                        - id: payment_routh2 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
                        uri: http://localhost:8001          #匹配后提供服务的路由地址
                #          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
                        predicates:
                            - Path=/payment/lb/**         # 断言，路径相匹配的进行路由
                            #- After=2020-02-21T15:51:37.485+08:00[Asia/Shanghai]
                            #- Cookie=username,zzyy
                            #- Header=X-Request-Id, \d+  # 请求头要有X-Request-Id属性并且值为整数的正则表达式

                eureka:
                instance:
                    hostname: cloud-gateway-service
                client: #服务提供者provider注册进eureka服务列表内
                    service-url:
                    register-with-eureka: true
                    fetch-registry: true
                    defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka

    
    通过这个配置 原来访问8001里得方法需要输入localhost:8001现在输入localhost:9527就可以了
























































































































































































































































































































































































































































































































































