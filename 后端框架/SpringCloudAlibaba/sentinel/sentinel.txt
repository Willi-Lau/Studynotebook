Sentinel 是什么？

随着微服务的流行，服务和服务之间的稳定性变得越来越重要。Sentinel 以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。

Sentinel 具有以下特征:

    丰富的应用场景：Sentinel 承接了阿里巴巴近 10 年的双十一大促流量的核心场景，例如秒杀（即突发流量控制在系统容量可以承受的范围）、消息削峰填谷、集群流量控制、实时熔断下游不可用应用等。
    完备的实时监控：Sentinel 同时提供实时的监控功能。您可以在控制台中看到接入应用的单台机器秒级数据，甚至 500 台以下规模的集群的汇总运行情况。
    广泛的开源生态：Sentinel 提供开箱即用的与其它开源框架/库的整合模块，例如与 Spring Cloud、Dubbo、gRPC 的整合。您只需要引入相应的依赖并进行简单的配置即可快速地接入 Sentinel。
    完善的 SPI 扩展点：Sentinel 提供简单易用、完善的 SPI 扩展接口。您可以通过实现扩展接口来快速地定制逻辑。例如定制规则管理、适配动态数据源等。




    启动方式： 
        cmd -> cd D:\sentinel -> java -jar sentinel-dashboard-1.7.0.jar
    界面操作：
        localhost:8080

        账号 sentinel
        密码 sentinel
    
    界面采用懒加载，就是说必须执行一次才会在网页上显示，不然不会显示东西，执行一次就会显示了        、

    界面上操作流控规则：

        阈值类型：
            OPS:

                设置 表视图 -》 + 流控 -》 QPS    每秒请求数

                设置完 每秒访问次数达到设置 QPS上限 就会报错  Blocked by Sentinel (flow limiting)
            
            线程数：

                设置 表视图 -》 + 流控 -》线程数   访问线程数
        
        流控模式：
            关联：（高级选项 -》 流控模式）
                当关联的资源达到阈值就限流自己
                e.g.  商品接口达到上限 限制 支付接口

                设置完关联使用postmen 并发执行B  再执行A  A 就会返回异常
        
        流控效果：
            快速失败：（默认）

                失败了直接返回提示

            预热：
                Warm Up（RuleConstant.CONTROL_BEHAVIOR_WARM_UP）方式，即预热/冷启动方式。当系统长期处于低水位的情况下
                ，当流量突然增加时，直接把系统拉升到高水位可能瞬间把系统压垮。通过"冷启动"，让通过的流量缓慢增加，在一定
                时间内逐渐增加到阈值上限，给冷系统一个预热的时间，避免冷系统被压垮。

                默认coldFactor为3，即请求QPS 从 threshold / 3开始，经预热时长逐渐升至设定的QPS阈值。

                案例，阀值为10+预热时长设置5秒。

                系统初始化的阀值为10/ 3约等于3,即阀值刚开始为3;然后过了5秒后阀值才慢慢升高恢复到10

                e.g.
                    淘宝 突然很大的流量冲击，这时候可能吧系统直接打死，就采用预热，慢慢的加载
            
            排队等待：
                阈值必须为QPS 超过阈值就等待 根据设置等待时间 排队
    

    降级规则：

        RT:（平均响应时间，秒级）
            平均响应时间超过阈值 且 在时间窗口内通过的请求数 >= 5，这两个条件同时满足后触发降级

        异常比例：（秒级）
            QPS >= 5且异常比例（秒级统计）超过阈值时，触发降级;时间窗口结束后，关闭降级 。

        异常数：(分钟级)
            异常数(分钟统计）超过阈值时，触发降级;时间窗口结束后，关闭降级





    












































































