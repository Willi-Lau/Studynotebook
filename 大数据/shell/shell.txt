shell

    作用：脚本 命令解释器
        外层应用程序想要操作linux内核需要shell脚本
    创建脚本：
        touch helloword.sh
    执行脚本：
        sh helloword.sh

    echo $SHELL 查看系统默认的shell解析器



    脚本格式：
        脚本以 #!/bin/bash 开头（指定解析器）

        输出： echo "abc"    --》 abc
        
        创建文件 进入文件夹命令等操作命令都同linux命令

        e.g. 在 /liuweiyi/abc 文件夹下创建一个hello.txt 输出helloword

            #!/bin/bash 
            cd /liuweiyi/abc
            touch hello.txt
            echo "hello word"  >> hello.txt      //把要输出的helloword添加到 hello.txt里

    Shell中的变量
        系统变量 $HOME $PWD $SHELL $USER 等
            $HOME 当前用户根目录   echo $HOME -----》 /home/liuweiyi
            $PWD 当前所在文件夹位置 
            $SHELL 默认shell 解析器
            $USER  当前用户
            $n(n指数字) 0代表自己 1-9代表输入的参数 10之后要加大括号
                        hello.sh 文件里有  echo "$0 $1 $2" 
                        执行 bash hello.sh --> hello.sh  输出自己的名字
                        执行 bash hello.sh kafka ---> hello.sh kafka 输出名字和第一个参数
            $# 获取所有输入参数的个数
            $* 代表输入的所有参数，这里吧所有参数当做你一个整体看待
            $@ 代表输入的所有参数，这里吧 每一个参数分别对待
            $? 代表上一条命令的返回状态 0 代表执行正常 非0代表不正常


        自定义变量 
            声明普通变量 A=1    //注意不能有空格 A = 1 就不行
            撤销普通变量 unset A 
            声明静态变量 readonly B=1 //注意不能 unset 
            声明全局变量 export C=2   //可以让其他shell使用

            注意：
                1.不能有空格
                2.默认都是String类型 定义 A=1+1 echo ---> 1+1
                3.变量的值如果有空格需要用双引号或单引号括起来


        运算符
            1. $((运算表达式)) 或 $[运算表达式]
            2.expr 运算表达式   + ,- ,\*, / ,%     //注意 expr运算表达式中间要有空格 2+3 不行，没空格 2 + 3 这种可以


            计算 (2 + 3) * 4

            expr ` expr 2 + 3 ` \* 4
            $[(2+3)*4]

        条件比较
            1. [ condition ] 左右两边要有空格 中间条件 condition不为空就是true
            2.判断比较
                = 字符串比较
                -lt 小与   -le 小于等于
                -eq 等于   -gt 大于
                -ge 大于等于 -ne 不等于
            3.文件权限比较
                -r 读      -w 写
                -x 执行
            4.文件功能比较
                -f 文件存在并且是一个常规文件
                -e 文件存在
                -d 文件存在并且是一个目录


            e.g.
                23 >= 22
                [ 23 -gt 22 ]   // 注意前后必须有空格


        read 读取控制台输入的内容

        系统函数
            basename  [string/pathname] [suffix]
            作用： 删除所有前缀 获取文件名字字符串
            e.g. 
                basename /bin/jar/hello.txt   ---> hello.txt


            dirname  [string/pathname] [suffix]
            作用： 删除文件名字返回文件绝对路径
            e.g. 
                dirname /bin/jar/hello.txt   ---> /bin/jar


        自定义函数：
            shell没有预先编译 是从头到尾执行 所以调用函数前必须声明函数
            函数返回值只能通过 $? 获得 可以显示追加return返回 如果不加加返回的是最后一条运行的结果


        工具
            cut [选项参数] filename
            参数列表 -f 列号 切割完提取第几列
                     -d 分隔符 按照指定分隔符切割
            
            cut -d : -f 1     用空格切要第二列
            
            grep name
                同linux用法 直接获取name开头元素行
































































