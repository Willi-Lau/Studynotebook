package com.netease.mooc.tiku.service;

import com.netease.edu.commons.service.BaseService;
import com.netease.edu.commons.utils.collection.PaginationBaseQuery;
import com.netease.edu.commons.utils.collection.PaginationResult;
import com.netease.mooc.commons.constants.SortTypeEnum;
import com.netease.mooc.quiz.dto.MocExamDto;
import com.netease.mooc.tiku.domain.MocExamDraft;
import com.netease.mooc.tiku.remote.constants.MocExamConstants;

import java.util.List;
import java.util.concurrent.ConcurrentHashMap;

public interface MocExamDraftService extends BaseService<MocExamDraft> {

    Long addDraft(MocExamDto examDto);

    Boolean updateDraft(MocExamDto examDto);

    MocExamDto getDraft(Long id);

    /**
     * 批量查询考试草稿，考虑过多是否会影响性能
     *
     * @param ids examIds
     * @return List
     */
    List<MocExamDto> listDraft(List<Long> ids);
    /**
     * 排序批量查询考试草稿，考虑过多是否会影响性能
     *
     * @param ids examIds
     * @return List
     */
    List<MocExamDto> listDraft(List<Long> ids,SortTypeEnum sortTypes);

    /**
     * 分页查询草稿列表
     * @param targetId
     * @param targetType
     * @param keyword
     * @param baseQuery
     * @return
     */
    PaginationResult<MocExamDto> pageExam(Long targetId, MocExamConstants.TargetType targetType, String keyword, PaginationBaseQuery baseQuery);
    /**
     * 根据 targetid 查询
     */
    List<MocExamDto>  getDraftByTargetId(Long targetId);
    /**
     * 根据 targetid  和 keyword 分页查询
     */
    ConcurrentHashMap<String,Object>  getDraftByTargetIdAndKeyWord(Long targetId,String keyword,Integer pageSize,Integer pageIndex);
    /**
     * 根据一组 targetId 和 keyword 分页查询 返回集合 ＋ 总数
     */
    ConcurrentHashMap<String,Object> getDraftByTargetIdsAndKeyWord(List<Long> targetIds, String keyword, Integer pageSize, Integer pageIndex);
}
